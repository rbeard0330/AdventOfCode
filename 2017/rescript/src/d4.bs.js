// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Js_dict = require("bs-platform/lib/js/js_dict.js");

var input = Fs.readFileSync("src/data/d4.txt", {
      encoding: "utf-8"
    });

function splitLines(s) {
  return s.split("\n");
}

function splitAtSpaces(s) {
  return s.split(" ");
}

function validate_passphrase(phrase) {
  var words = phrase.split(" ");
  var word_counts = {};
  words.forEach(function (word) {
        var current_count = Js_dict.get(word_counts, word);
        var new_value = current_count !== undefined ? current_count + 1 | 0 : 1;
        word_counts[word] = new_value;
        
      });
  return Js_dict.values(word_counts).every(function (n) {
              return n === 1;
            });
}

if (!validate_passphrase("aa bb cc dd ee")) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "d4.res",
          22,
          0
        ],
        Error: new Error()
      };
}

if (validate_passphrase("aa bb cc dd aa")) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "d4.res",
          23,
          0
        ],
        Error: new Error()
      };
}

if (!validate_passphrase("aa bb cc dd aaa")) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "d4.res",
          24,
          0
        ],
        Error: new Error()
      };
}

var words = input.split("\n").filter(function (s) {
      return s.trim() !== "";
    });

console.log(words.filter(validate_passphrase).length);

function validate_passphrase2(phrase) {
  var words = phrase.split(" ");
  var word_counts = {};
  words.map(function (s) {
          return Array.from(s).sort().reduce((function (prim, prim$1) {
                        return prim$1.concat(prim);
                      }), "");
        }).forEach(function (word) {
        var current_count = Js_dict.get(word_counts, word);
        var new_value = current_count !== undefined ? current_count + 1 | 0 : 1;
        word_counts[word] = new_value;
        
      });
  return Js_dict.values(word_counts).every(function (n) {
              return n === 1;
            });
}

console.log(words.filter(validate_passphrase2).length);

exports.input = input;
exports.splitLines = splitLines;
exports.splitAtSpaces = splitAtSpaces;
exports.validate_passphrase = validate_passphrase;
exports.words = words;
exports.validate_passphrase2 = validate_passphrase2;
/* input Not a pure module */
