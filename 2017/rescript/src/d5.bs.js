// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");

function splitLines(s) {
  return s.split("\n");
}

function $$parseInt(s) {
  return Number(s) | 0;
}

var input = Fs.readFileSync("src/data/d5.txt", {
            encoding: "utf-8"
          }).split("\n").filter(function (s) {
        return s.trim() !== "";
      }).map($$parseInt);

var testInput = [
  0,
  3,
  0,
  1,
  -3
];

function step_out_of_maze(_steps, _index, instructions) {
  while(true) {
    var index = _index;
    var steps = _steps;
    if (index >= instructions.length) {
      return steps;
    }
    var jump = instructions[index];
    instructions[index] = jump + 1 | 0;
    _index = index + jump | 0;
    _steps = steps + 1 | 0;
    continue ;
  };
}

if (step_out_of_maze(0, 0, testInput.slice()) !== 5) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "d5.res",
          23,
          0
        ],
        Error: new Error()
      };
}

console.log(step_out_of_maze(0, 0, input.slice()));

function step_out_of_maze_2(_steps, _index, instructions) {
  while(true) {
    var index = _index;
    var steps = _steps;
    if (index >= instructions.length) {
      return steps;
    }
    var jump = instructions[index];
    var change = jump >= 3 ? -1 : 1;
    instructions[index] = jump + change | 0;
    _index = index + jump | 0;
    _steps = steps + 1 | 0;
    continue ;
  };
}

if (step_out_of_maze_2(0, 0, testInput) !== 10) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "d5.res",
          41,
          0
        ],
        Error: new Error()
      };
}

console.log(step_out_of_maze_2(0, 0, input));

exports.splitLines = splitLines;
exports.$$parseInt = $$parseInt;
exports.input = input;
exports.testInput = testInput;
exports.step_out_of_maze = step_out_of_maze;
exports.step_out_of_maze_2 = step_out_of_maze_2;
/* input Not a pure module */
